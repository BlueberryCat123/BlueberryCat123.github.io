{"posts":[{"title":"Matlab史密斯圆图与LNA设计","text":"这几天需要用Matlab设计一个LNA，结果发现Matlab的史密斯圆图不太好用… 于是我决定自己整一个史密斯圆图。 电阻圆族和电抗圆族公式如下： $${(\\Gamma_{r}-\\frac{r}{1+r})}^2 + {\\Gamma_{i}}^2 = {(\\frac{1}{1+r})}^2$$ $${(\\Gamma_{r}-1)}^2 + {(\\Gamma_{i}-\\frac{1}{x})}^2 = {(\\frac{1}{x})}^2$$ 那么，可以写出代码如下： 12345678910111213141516171819202122232425262728function [] = smith() for x = -4 : 0.2 : 4 viscircles([1, 1 / x], 1 / abs(x), &quot;LineWidth&quot;, 0.1, &quot;Color&quot;, &quot;blue&quot;); xlim([-1 1]); ylim([-1 1]); end line([-1, 1], [0, 0], &quot;LineWidth&quot;, 0.1, &quot;Color&quot;, &quot;blue&quot;); for r = 0 : 0.2 : 5 viscircles([r / (1 + r), 0], 1 / (1 + r), &quot;LineWidth&quot;, 0.1, &quot;Color&quot;, &quot;blue&quot;); hold on; axis equal; xlim([-1 1]); ylim([-1 1]); end anglex={-1 -1 1 1}; angley={1 -1 -1 1}; for i = 1 : 4 for theta = pi / 2 * i : pi / 1000 : pi / 2 * ( i + 1 ) x = cos(theta); y = sin(theta); x1 = cos(theta + pi / 1000); y1 = sin(theta + pi / 1000); fill([x, x1, anglex{i}], [y, y1, angley{i}], &quot;b&quot;); end endend 效果是这样的 LNA设计基于上文的史密斯圆图来表示，使用双共轭匹配、等增益圆设计方法。 具体公式比较复杂，可以去看RF Circuit Design这本书📕，中文版叫做《射频电路设计――理论与应用（第二版）》。 代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103clc;clear;% S11 A11 S21 A21 S12 A12 S22 A22 Topt_m Topt_a Fmin_db Rn/50 顺序 Parameter_demo = [0.3 30 2.5 -80 0.2 -60 0.2 -15 0.5 45 1.5 0.08];Parameter_2G = [];% 选择S参数Sel = Parameter_demo;% 指定 增益G_db = 8;G = power(10, G_db / 10);% 指定 VSMRomnVSMRomn_target = 1.7;% 指定 噪声系数F_db = 1.6; F = power(10, F_db / 10);% Rn/50Rn = Sel(12);% 最小噪声系数Fmin_db = Sel(11); Fmin = power(10, Fmin_db / 10);% opt反射系数Topt_a = ang2rad(Sel(10));Topt = Sel(9) * exp (1i * Topt_a);% 指定S参数a11 = ang2rad(Sel(2));s11 = Sel(1) * exp (1i * a11);a21 = ang2rad(Sel(4));s21 = Sel(3) * exp (1i * a21);a12 = ang2rad(Sel(6));s12 = Sel(5) * exp (1i * a12);a22 = ang2rad(Sel(8));s22 = Sel(7) * exp (1i * a22);% 史密斯圆图smith();% 稳定性计算delta = s11 * s22 -s12 * s21;k = (1 - power(abs(s11), 2) - power(abs(s22), 2) + power(abs(delta), 2)) / (2 * abs(s12) * abs(s21));% 最大功率增益Gmax = abs(s21) / abs(s12) * (k - sqrt(power(k, 2) - 1));Gmax_db = 10 * log10(Gmax);% 比例系数g0 = G / power(abs(s21), 2);% 功率增益圆dg0 = g0 * conj(s22 - delta * conj(s11)) / (1 + g0 * (power(abs(s22), 2) - power(abs(delta), 2)));rg0 = sqrt(1 - 2 * k * g0 * abs(s12 * s21) + power(g0, 2) * power(abs(s12 * s21), 2)) / abs(1 + g0 * (power(abs(s22), 2) - power(abs(delta), 2)));dgs = ((1 - s22 * dg0) * conj((s11 - delta * dg0)) - power(rg0, 2) * conj(delta) * s22) / (power(abs(1 - s22 * dg0), 2) - power(rg0, 2) * power(abs(s22), 2));rgs = rg0 * abs(s12 * s21) / abs(power(abs(1 - s22 * dg0), 2) - power(rg0, 2) * power(abs(s22), 2));viscircles([real(dgs), imag(dgs)], rgs, &quot;LineWidth&quot;, 2, &quot;Color&quot;, &quot;red&quot;);% 噪声功率圆Qk = power(abs(1 + Topt), 2) * (F - Fmin) / (4 * Rn);df = Topt / (1 + Qk);rf = sqrt((1 - power(abs(Topt), 2)) * Qk + power(Qk, 2)) / (1 + Qk);viscircles([real(df), imag(df)], rf, &quot;LineWidth&quot;, 2, &quot;Color&quot;, &quot;green&quot;);% opt反射系数scatter(real(Topt), imag(Topt), &quot;red&quot;);% 扫描取优min_F = inf;for degree = 1:360 Ts = dgs + rgs * exp (1i * ang2rad(degree)); Tl = (s11 - conj(Ts)) / (delta - s22 * conj(Ts)); Tout = s22 + s12 * s21 * Ts / (1 - s11 * Ts); Tomn = (conj(Tout) - Tl) / (1 - Tl * Tout); VSMRomn = (1 + abs(Tomn)) / (1 - abs(Tomn)); if(abs(Ts - df) &lt; rf &amp;&amp; VSMRomn &lt; VSMRomn_target) scan_F = Fmin + 4 * Rn * power(abs(Ts - Topt), 2) / ((1 - power(abs(Ts), 2)) * power(abs(1 + Topt), 2)); if(scan_F &lt; min_F) min_F = scan_F; Ts_final = Ts; Tl_final = Tl; end scatter(real(Ts), imag(Ts), &quot;yellow&quot;); endendscatter(real(Ts_final), imag(Ts_final), &quot;red&quot;); 该代码应配合下面的函数使用。 123function [rad] = ang2rad(ang) rad = ang / 360 * 2 * pi;end 运行结果如下： 上图中红圈就是对于$\\Gamma_{S}$的等增益圆，绿圈则是等噪声圆。 绿圈中的红点是$\\Gamma_{opt}$。 下方一大片黄点是满足参数要求（增益、噪声、VSWR）的点，红色的则是噪声系数最小的点。 [Warning] 该代码是在$\\Gamma_{L}$完全共轭匹配的前提下，调整$\\Gamma_{S}$来达到目标参数，不一定适合所有场景。","link":"https://blueberrycat123.github.io/2023/05/27/Matlab%E5%8F%B2%E5%AF%86%E6%96%AF%E5%9C%86%E5%9B%BE%E4%B8%8ELNA%E8%AE%BE%E8%AE%A1/"},{"title":"My First Post","text":"经典图片 这个博客打算用来写一些我觉得有价值的东西，或者记录一些有意思的事情。之前的那个旧网站就留在那里吧，不少人对于ChatGPT这个功能还挺喜欢的。 旧网站链接：BlueberryCat.site 这次我使用了Hexo框架，终于不用自己手写HTML或者CSS了… 之前VUE版的项目和Quasar的项目写的也差不多了。但是感觉这种框架的工作量太大了，作为个人博客啥的实在是有些杀鸡用牛刀了。 顺便一提，现在在post内可以写数学公式了！ $$E = mc^2$$","link":"https://blueberrycat123.github.io/2023/05/27/My-First-Post/"},{"title":"用Unity开发的坦克小游戏","text":"用Unity的免费素材包做了个小游戏。 看起来是不是很有意思？点击这里下载 在这个游戏里，坦克会分为四个队伍，互相对战！ 每个队还会拥有一座 “强力” 的防御塔，向靠近的敌人喷射怒火！ 和AI队友通力协作，打败其他的AI！ 联机游戏真是写不动了 死亡后有观战视角，能看AI互锤。 没有退出键，需要ALT+F4退出，致敬刀剑神域！","link":"https://blueberrycat123.github.io/2023/05/27/%E7%94%A8Unity%E5%BC%80%E5%8F%91%E7%9A%84%E5%9D%A6%E5%85%8B%E5%B0%8F%E6%B8%B8%E6%88%8F/"},{"title":"崩坏：星穹铁道 伤害计算器","text":"闲来无事，用QT搓了一个伤害计算器。 大概长这样👇 左侧是角色的基础面板数据、Buff效果和怪物属性，选择性输入这三大部分就可以在右侧拿到当前升级词条的价值和伤害数值。 词条期望是由B站用户 @LucasCheung299 提供的计算式。 伤害公式来自 这篇文章 点击这里即可下载！ 其实本来是做了个Matlab App的，但看起来大家都没有Matlab，只能弄个可执行文件分发了…😔","link":"https://blueberrycat123.github.io/2023/05/27/%E5%B4%A9%E5%9D%8F%EF%BC%9A%E6%98%9F%E7%A9%B9%E9%93%81%E9%81%93-%E4%BC%A4%E5%AE%B3%E8%AE%A1%E7%AE%97%E5%99%A8/"},{"title":"快乐的天线方向图","text":"之前做实验，老师要求用Origin画天线的方向图，结果我实在是整不到破解版，就自己用Matalb整了一个。 代码就不放了，毕竟确实也比较简单。 效果还是不错的，年级里面有几个同学也用的我的代码。 这里半功率主瓣也标出来了，可以用鼠标点一下上下的点来计算主瓣宽度。","link":"https://blueberrycat123.github.io/2023/05/28/%E5%BF%AB%E4%B9%90%E7%9A%84%E5%A4%A9%E7%BA%BF%E6%96%B9%E5%90%91%E5%9B%BE/"}],"tags":[{"name":"Matlab","slug":"Matlab","link":"https://blueberrycat123.github.io/tags/Matlab/"},{"name":"LNA","slug":"LNA","link":"https://blueberrycat123.github.io/tags/LNA/"},{"name":"Unity","slug":"Unity","link":"https://blueberrycat123.github.io/tags/Unity/"},{"name":"Game","slug":"Game","link":"https://blueberrycat123.github.io/tags/Game/"},{"name":"星穹铁道","slug":"星穹铁道","link":"https://blueberrycat123.github.io/tags/%E6%98%9F%E7%A9%B9%E9%93%81%E9%81%93/"},{"name":"QT","slug":"QT","link":"https://blueberrycat123.github.io/tags/QT/"}],"categories":[{"name":"Codes","slug":"Codes","link":"https://blueberrycat123.github.io/categories/Codes/"},{"name":"Daily","slug":"Daily","link":"https://blueberrycat123.github.io/categories/Daily/"}],"pages":[]}